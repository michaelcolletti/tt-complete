apiVersion: v1
items:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"creationTimestamp":null,"labels":{"run":"mongo","tier":"backend"},"name":"mongo","namespace":"mediaflow"},"spec":{"replicas":1,"selector":{"matchLabels":{"run":"mongo","tier":"backend"}},"strategy":{},"template":{"metadata":{"creationTimestamp":null,"labels":{"run":"mongo","tier":"backend"}},"spec":{"containers":[{"env":[{"name":"MONGODB_URI","value":"mongodb://mongosvc:30017/conduit"},{"name":"API_ROOT","value":"http://nodesvc:30000/api"},{"name":"APIROOT","value":"http://nodesvc:30000/api"},{"name":"APIURL","value":"http://nodesvc:30000/api"},{"name":"API_URL","value":"http://nodesvc:30000/api"},{"name":"PORT","value":"27017"}],"image":"mongo:latest","name":"mongodb","ports":[{"containerPort":27017}],"volumeMounts":[{"mountPath":"/data","name":"aws-pv-mongo"}]}],"volumes":[{"name":"aws-pv-mongo","persistentVolumeClaim":{"claimName":"aws-pvc-mongo"}}]}}}}
    creationTimestamp: 2020-09-08T15:05:28Z
    generation: 1
    labels:
      run: mongo
      tier: backend
    name: mongo
    namespace: mediaflow
    resourceVersion: "3422"
    selfLink: /apis/apps/v1/namespaces/mediaflow/deployments/mongo
    uid: 372388de-33f4-4439-884f-05393621bc05
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        run: mongo
        tier: backend
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          run: mongo
          tier: backend
      spec:
        containers:
        - env:
          - name: MONGODB_URI
            value: mongodb://mongosvc:30017/conduit
          - name: API_ROOT
            value: http://nodesvc:30000/api
          - name: APIROOT
            value: http://nodesvc:30000/api
          - name: APIURL
            value: http://nodesvc:30000/api
          - name: API_URL
            value: http://nodesvc:30000/api
          - name: PORT
            value: "27017"
          image: mongo:latest
          imagePullPolicy: Always
          name: mongodb
          ports:
          - containerPort: 27017
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data
            name: aws-pv-mongo
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: aws-pv-mongo
          persistentVolumeClaim:
            claimName: aws-pvc-mongo
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: 2020-09-08T15:08:08Z
      lastUpdateTime: 2020-09-08T15:08:08Z
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: 2020-09-08T15:05:28Z
      lastUpdateTime: 2020-09-08T15:08:08Z
      message: ReplicaSet "mongo-7d45d59ddb" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "2"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"kubernetes.io/change-cause":"kubectl run node-app --image=legacywhisperer/node-app:latest --dry-run=true --replicas=3 --restart=Always --record=true --output=yaml"},"creationTimestamp":null,"labels":{"run":"node","tier":"api"},"name":"node","namespace":"mediaflow"},"spec":{"replicas":1,"selector":{"matchLabels":{"run":"node"}},"strategy":{},"template":{"metadata":{"creationTimestamp":null,"labels":{"run":"node","tier":"api"}},"spec":{"containers":[{"env":[{"name":"API_ROOT","value":"http://nodesvc:30000/api"},{"name":"APIURL","value":"http://nodesvc:30000/api"},{"name":"NODE_ENV","value":"production"},{"name":"API_URL","value":"http://nodesvc:30000/api"},{"name":"MONGODB_URI","value":"mongodb://mongosvc:30017/conduit"},{"name":"PORT","value":"3000"}],"image":"legacywhisperer/node-app:qa","name":"node","ports":[{"containerPort":3000}]}]}}}}
      kubernetes.io/change-cause: kubectl run node-app --image=legacywhisperer/node-app:latest
        --dry-run=true --replicas=3 --restart=Always --record=true --output=yaml
    creationTimestamp: 2020-09-08T15:05:28Z
    generation: 2
    labels:
      run: node
      tier: api
    name: node
    namespace: mediaflow
    resourceVersion: "5722"
    selfLink: /apis/apps/v1/namespaces/mediaflow/deployments/node
    uid: efc6f8ab-baf3-416a-be81-180f32142239
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        run: node
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          run: node
          tier: api
      spec:
        containers:
        - env:
          - name: API_ROOT
            value: http://nodesvc:30000/api
          - name: APIURL
            value: http://nodesvc:30000/api
          - name: NODE_ENV
            value: production
          - name: API_URL
            value: http://nodesvc:30000/api
          - name: MONGODB_URI
            value: mongodb://mongosvc:30017/conduit
          - name: PORT
            value: "3000"
          image: legacywhisperer/node-app:qa
          imagePullPolicy: Always
          name: node
          ports:
          - containerPort: 3000
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: 2020-09-08T15:29:07Z
      lastUpdateTime: 2020-09-08T15:29:07Z
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: 2020-09-08T15:05:28Z
      lastUpdateTime: 2020-09-08T15:29:07Z
      message: ReplicaSet "node-8654649c77" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"kubernetes.io/ingress.class":"alb"},"creationTimestamp":null,"labels":{"run":"react","tier":"frontend"},"name":"react","namespace":"mediaflow"},"spec":{"replicas":3,"selector":{"matchLabels":{"run":"react","tier":"frontend"}},"strategy":{},"template":{"metadata":{"creationTimestamp":null,"labels":{"run":"react","tier":"frontend"}},"spec":{"containers":[{"env":[{"name":"API_ROOT","value":"https://conduit.productionready.io/api"},{"name":"APIURL","value":"https://conduit.productionready.io/api"},{"name":"PORT","value":"4100"}],"image":"legacywhisperer/react-app:prod","name":"react","ports":[{"containerPort":4100}]}]}}}}
      kubernetes.io/ingress.class: alb
    creationTimestamp: 2020-09-08T15:05:28Z
    generation: 1
    labels:
      run: react
      tier: frontend
    name: react
    namespace: mediaflow
    resourceVersion: "3177"
    selfLink: /apis/apps/v1/namespaces/mediaflow/deployments/react
    uid: 06a2462e-eb6f-41ee-88dc-5cc1e43e59eb
  spec:
    progressDeadlineSeconds: 600
    replicas: 3
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        run: react
        tier: frontend
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          run: react
          tier: frontend
      spec:
        containers:
        - env:
          - name: API_ROOT
            value: https://conduit.productionready.io/api
          - name: APIURL
            value: https://conduit.productionready.io/api
          - name: PORT
            value: "4100"
          image: legacywhisperer/react-app:prod
          imagePullPolicy: IfNotPresent
          name: react
          ports:
          - containerPort: 4100
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 3
    conditions:
    - lastTransitionTime: 2020-09-08T15:05:57Z
      lastUpdateTime: 2020-09-08T15:05:57Z
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: 2020-09-08T15:05:28Z
      lastUpdateTime: 2020-09-08T15:05:57Z
      message: ReplicaSet "react-7cb75cf844" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 3
    replicas: 3
    updatedReplicas: 3
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
