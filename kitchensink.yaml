apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: mongodb
    tier: db
  name: mongodb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
      tier: backend
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: mongodb
        tier: backend
    spec:
      containers:
      - image: mongo
        name: mongodb
        ports: 
          - containerPort: 27017
        env: 
        - name: MONGODB_URI
          value: 'mongodb://mongodb@localhost:27017'
        - name: API_ROOT
          value: 'http://node-svc:30000/api'
        volumeMounts:
        - mountPath: "/data/db"
          name: pv-mongo
      volumes:
      - name: pv-mongo
        persistentVolumeClaim:
          claimName: pvc-mongo

---

apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: mongodb
    tier: backend
  name: mongodb
spec:
  ports:
  - port: 27017
    protocol: TCP
    targetPort: 27017
  selector:
    app: mongodb
    tier: backend
  type: ClusterIP
status:
  loadBalancer: {}

---

apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kubernetes.io/change-cause: kubectl run node-app --image=legacywhisperer/node-app:latest --dry-run=true --replicas=3 --restart=Always --record=true --output=yaml
  creationTimestamp: null
  labels:
    run: node-react-app
    tier: backend
  name: node-react-app
spec:
  replicas: 1
  selector:
    matchLabels:
      run: node-react-app
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        run: node-react-app
        tier: backend
    spec:
      containers:
      - image: legacywhisperer/node-app:latest
        name: node-app
        env: 
        - name: MONGODB_URI
          value: mongodb://mongodb@localhost:27017
      - image: legacywhisperer/react-app:latest
        name: react-app
        env: 
        - name: API_ROOT
          value:  'http://node-svc:30000/api'
---

apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    run: node-svc
    tier: backend
  name: node-svc
spec:
  ports:
  - port: 3000
    nodePort: 30000
    protocol: TCP
    targetPort: 3000
  selector:
    run: node-svc
    tier: backend
  type: NodePort

---

apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    run: react-svc
    tier: frontend
  name: react-svc
spec:
  ports:
  - port: 4100
    protocol: TCP
    targetPort: 4100
    nodePort: 30100
  selector:
    run: react-svc
    tier: frontend
  type: NodePort
